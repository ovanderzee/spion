{"version":3,"file":"createSpion.js","sources":["../src/functions.ts","../src/index.ts"],"sourcesContent":["export const clone = function (original: Function, context?: any): Function {\n    // Creates a new function, optionally preserving desired context.\n    const bound = original.bind(context)\n    // Shallow copies over function properties, if any.\n    const replica = Object.assign(bound, original)\n    return replica\n}\n\nexport const randomString = (): string => {\n    const integer = Math.round(Math.random() * 10e9)\n    return integer.toString(36)\n}\n\nexport const sleep = (duration: number): Promise<void> => {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration)\n    })\n}\n","import { Intelligence, Spion } from './types.js'\nimport { clone, randomString } from './functions.js'\n\nconst createSpion = function (\n    api: any,\n    functionName: string,\n    context?: any,\n): Spion {\n    const original: Function = api[functionName]\n    const replica = clone(original, context)\n    const callData: Intelligence[] = []\n    const processId = randomString()\n\n    const interceptor = function () {\n        const currentIntelligence: Intelligence = {\n            id: processId,\n            args: Array.from(arguments),\n            return: replica(...arguments),\n        }\n        callData.push(currentIntelligence)\n        return currentIntelligence.return\n    }\n\n    api[functionName] = interceptor\n\n    const debrief = function (): Intelligence[] {\n        destroy()\n        return report()\n    }\n\n    const destroy = function (): void {\n        api[functionName] = original\n    }\n\n    const report = function (): Intelligence[] {\n        const filteredCallData = callData.filter((cd) => cd.id === processId)\n        const mappedCallData = filteredCallData.map((cd) => {\n            delete cd.id\n            return cd\n        })\n        return mappedCallData\n    }\n\n    return {\n        debrief: debrief,\n        destroy: destroy,\n        report: report,\n    }\n}\n\nexport default createSpion\n"],"names":[],"mappings":";;;;;;IAAa,MAAA,KAAA,GAAQ,SAAU,QAAA,EAAoB,OAAyB,EAAA;IAExE,EAAM,MAAA,KAAA,GAAQ,QAAS,CAAA,IAAA,CAAK,OAAO,CAAA,CAAA;IAEnC,EAAA,MAAM,OAAU,GAAA,MAAA,CAAO,MAAO,CAAA,KAAA,EAAO,QAAQ,CAAA,CAAA;IAC7C,EAAO,OAAA,OAAA,CAAA;IACX,CAAA,CAAA;IAEO,MAAM,eAAe,MAAc;IACtC,EAAA,MAAM,UAAU,IAAK,CAAA,KAAA,CAAM,IAAK,CAAA,MAAA,KAAW,IAAI,CAAA,CAAA;IAC/C,EAAO,OAAA,OAAA,CAAQ,SAAS,EAAE,CAAA,CAAA;IAC9B,CAAA;;ACRA,UAAM,WAAc,GAAA,SAChB,GACA,EAAA,YAAA,EACA,OACK,EAAA;IACL,EAAM,MAAA,QAAA,GAAqB,IAAI,YAAY,CAAA,CAAA;IAC3C,EAAM,MAAA,OAAA,GAAU,KAAM,CAAA,QAAA,EAAU,OAAO,CAAA,CAAA;IACvC,EAAA,MAAM,WAA2B,EAAC,CAAA;IAClC,EAAA,MAAM,YAAY,YAAa,EAAA,CAAA;IAE/B,EAAA,MAAM,cAAc,WAAY;IAC5B,IAAA,MAAM,mBAAoC,GAAA;IAAA,MACtC,EAAI,EAAA,SAAA;IAAA,MACJ,IAAA,EAAM,KAAM,CAAA,IAAA,CAAK,SAAS,CAAA;IAAA,MAC1B,MAAA,EAAQ,OAAQ,CAAA,GAAG,SAAS,CAAA;IAAA,KAChC,CAAA;IACA,IAAA,QAAA,CAAS,KAAK,mBAAmB,CAAA,CAAA;IACjC,IAAA,OAAO,mBAAoB,CAAA,MAAA,CAAA;IAAA,GAC/B,CAAA;IAEA,EAAA,GAAA,CAAI,YAAY,CAAI,GAAA,WAAA,CAAA;IAEpB,EAAA,MAAM,UAAU,WAA4B;IACxC,IAAQ,OAAA,EAAA,CAAA;IACR,IAAA,OAAO,MAAO,EAAA,CAAA;IAAA,GAClB,CAAA;IAEA,EAAA,MAAM,UAAU,WAAkB;IAC9B,IAAA,GAAA,CAAI,YAAY,CAAI,GAAA,QAAA,CAAA;IAAA,GACxB,CAAA;IAEA,EAAA,MAAM,SAAS,WAA4B;IACvC,IAAA,MAAM,mBAAmB,QAAS,CAAA,MAAA,CAAO,CAAC,EAAO,KAAA,EAAA,CAAG,OAAO,SAAS,CAAA,CAAA;IACpE,IAAA,MAAM,cAAiB,GAAA,gBAAA,CAAiB,GAAI,CAAA,CAAC,EAAO,KAAA;IAChD,MAAA,OAAO,EAAG,CAAA,EAAA,CAAA;IACV,MAAO,OAAA,EAAA,CAAA;IAAA,KACV,CAAA,CAAA;IACD,IAAO,OAAA,cAAA,CAAA;IAAA,GACX,CAAA;IAEA,EAAO,OAAA;IAAA,IACH,OAAA;IAAA,IACA,OAAA;IAAA,IACA,MAAA;IAAA,GACJ,CAAA;IACJ;;;;;;;;"}
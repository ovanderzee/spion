{"version":3,"file":"createSpion.js","sources":["../src/functions.ts","../src/index.ts"],"sourcesContent":["export const clone = function (original: Function, context?: any): Function {\n    // Creates a new function, optionally preserving desired context.\n    const bound = original.bind(context)\n    // Shallow copies over function properties, if any.\n    const replica = Object.assign(bound, original)\n    return replica\n}\n","import { Intelligence, Direction, Spion } from './types.js'\nimport { clone } from './functions.js'\n\nconst createSpion = function (\n    api: any,\n    functionName: string,\n    context?: any,\n): Spion {\n    const original: Function = api[functionName]\n    const replica = clone(original, context)\n    const callDirection: Direction = {}\n    const callData: Intelligence[] = []\n    const start = performance.now()\n\n    const interceptor = function () {\n        const args =\n            'withArgs' in callDirection ? callDirection.withArgs : arguments\n        const returnValue = replica(...args)\n        const currentIntelligence: Intelligence = {\n            args: Array.from(args),\n            return:\n                'returnValue' in callDirection\n                    ? callDirection.returnValue\n                    : returnValue,\n            time: performance.now() - start,\n        }\n        callData.push(currentIntelligence)\n        return currentIntelligence.return\n    }\n\n    api[functionName] = interceptor\n\n    const quit = (): void => {\n        if (api[functionName] !== original) {\n            api[functionName] = original\n        }\n    }\n\n    const report = (): Intelligence[] => {\n        quit()\n        return callData\n    }\n\n    const withArgs = (args: any[]): void => {\n        callDirection.withArgs = args\n    }\n\n    const returnValue = (value: any): void => {\n        callDirection.returnValue = value\n    }\n\n    return {\n        report: report,\n        quit: quit,\n        withArgs: withArgs,\n        returnValue: returnValue,\n    }\n}\n\nexport default createSpion\n"],"names":["returnValue"],"mappings":";;;;;;IAAa,MAAA,KAAA,GAAQ,SAAU,QAAA,EAAoB,OAAyB,EAAA;IAExE,EAAM,MAAA,KAAA,GAAQ,QAAS,CAAA,IAAA,CAAK,OAAO,CAAA,CAAA;IAEnC,EAAA,MAAM,OAAU,GAAA,MAAA,CAAO,MAAO,CAAA,KAAA,EAAO,QAAQ,CAAA,CAAA;IAC7C,EAAO,OAAA,OAAA,CAAA;IACX,CAAA;;ACHA,UAAM,WAAc,GAAA,SAChB,GACA,EAAA,YAAA,EACA,OACK,EAAA;IACL,EAAM,MAAA,QAAA,GAAqB,IAAI,YAAY,CAAA,CAAA;IAC3C,EAAM,MAAA,OAAA,GAAU,KAAM,CAAA,QAAA,EAAU,OAAO,CAAA,CAAA;IACvC,EAAA,MAAM,gBAA2B,EAAC,CAAA;IAClC,EAAA,MAAM,WAA2B,EAAC,CAAA;IAClC,EAAM,MAAA,KAAA,GAAQ,YAAY,GAAI,EAAA,CAAA;IAE9B,EAAA,MAAM,cAAc,WAAY;IAC5B,IAAA,MAAM,IACF,GAAA,UAAA,IAAc,aAAgB,GAAA,aAAA,CAAc,QAAW,GAAA,SAAA,CAAA;IAC3D,IAAMA,MAAAA,YAAAA,GAAc,OAAQ,CAAA,GAAG,IAAI,CAAA,CAAA;IACnC,IAAA,MAAM,mBAAoC,GAAA;IAAA,MACtC,IAAA,EAAM,KAAM,CAAA,IAAA,CAAK,IAAI,CAAA;IAAA,MACrB,MACI,EAAA,aAAA,IAAiB,aACX,GAAA,aAAA,CAAc,WACdA,GAAAA,YAAAA;IAAA,MACV,IAAA,EAAM,WAAY,CAAA,GAAA,EAAQ,GAAA,KAAA;IAAA,KAC9B,CAAA;IACA,IAAA,QAAA,CAAS,KAAK,mBAAmB,CAAA,CAAA;IACjC,IAAA,OAAO,mBAAoB,CAAA,MAAA,CAAA;IAAA,GAC/B,CAAA;IAEA,EAAA,GAAA,CAAI,YAAY,CAAI,GAAA,WAAA,CAAA;IAEpB,EAAA,MAAM,OAAO,MAAY;IACrB,IAAI,IAAA,GAAA,CAAI,YAAY,CAAA,KAAM,QAAU,EAAA;IAChC,MAAA,GAAA,CAAI,YAAY,CAAI,GAAA,QAAA,CAAA;IAAA,KACxB;IAAA,GACJ,CAAA;IAEA,EAAA,MAAM,SAAS,MAAsB;IACjC,IAAK,IAAA,EAAA,CAAA;IACL,IAAO,OAAA,QAAA,CAAA;IAAA,GACX,CAAA;IAEA,EAAM,MAAA,QAAA,GAAW,CAAC,IAAsB,KAAA;IACpC,IAAA,aAAA,CAAc,QAAW,GAAA,IAAA,CAAA;IAAA,GAC7B,CAAA;IAEA,EAAM,MAAA,WAAA,GAAc,CAAC,KAAqB,KAAA;IACtC,IAAA,aAAA,CAAc,WAAc,GAAA,KAAA,CAAA;IAAA,GAChC,CAAA;IAEA,EAAO,OAAA;IAAA,IACH,MAAA;IAAA,IACA,IAAA;IAAA,IACA,QAAA;IAAA,IACA,WAAA;IAAA,GACJ,CAAA;IACJ;;;;;;;;"}